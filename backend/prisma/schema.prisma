generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String       @id @default(uuid())
  name      String
  email     String       @unique
  password  String
  isEmailVerified Boolean @default(false)
  role      Role         @default(SELLER)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now())  
  raffles   Raffle[]     @relation("CreatedRaffles")
  sales     RaffleSale[]
  verificationToken VerificationToken[]
}

model Raffle {
  id          String       @id @default(uuid())
  name        String
  description String?
  price       Float
  quantity    Int
  endDate     DateTime
  status      RaffleStatus @default(ACTIVE)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
  createdBy   User         @relation("CreatedRaffles", fields: [createdById], references: [id])
  createdById String
  sales       RaffleSale[]
}

model RaffleSale {
  id        String   @id @default(uuid())
  raffle    Raffle   @relation(fields: [raffleId], references: [id])
  raffleId  String @unique
  seller    User     @relation(fields: [sellerId], references: [id])
  sellerId  String

  startNumber Int
  endNumber   Int

  numbers   Number[]
  status SaleStatus @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Number {
  id         String       @id @default(uuid())
  number     Int
  status     NumberStatus @default(AVAILABLE)
  buyerName  String
  buyerPhone String
  proofUrl   String?
  sale       RaffleSale   @relation(fields: [saleId], references: [id])
  saleId     String
}

model VerificationToken {
  id String    @id @default(uuid())
  identifier String
  token      String
  type       TokenType
  expiresAt DateTime
  createdAt DateTime @default(now())

  user User? @relation(fields: [userId], references: [id])
  userId String?

  @@index([identifier, type])
}

enum Role {
  ADMIN
  LEADER
  SELLER
}

enum RaffleStatus {
  ACTIVE
  CLOSED
}

enum NumberStatus {
  AVAILABLE
  RESERVED
  PAID
}

enum SaleStatus {
  PENDING
  APPROVED
  REJECTED
}

enum TokenType {
  EMAIL_VERIFICATION
  PASSWORD_RESET
}